// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

package proto_java;

public final class Messages {
  private Messages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_example_grpc_KaspadMessage_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_example_grpc_KaspadMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016messages.proto\022\020proto_java\032\tp2p." +
      "proto\032\trpc.proto\"\346Y\n\rKaspadMessage\0227\n\tad" +
      "dresses\030\001 \001(\0132\".proto_java.Address" +
      "esMessageH\000\022/\n\005block\030\002 \001(\0132\036.org.example" +
      ".grpc.BlockMessageH\000\022;\n\013transaction\030\003 \001(" +
      "\0132$.proto_java.TransactionMessageH" +
      "\000\022=\n\014blockLocator\030\005 \001(\0132%.org.example.gr" +
      "pc.BlockLocatorMessageH\000\022E\n\020requestAddre" +
      "sses\030\006 \001(\0132).proto_java.RequestAdd" +
      "ressesMessageH\000\022I\n\022requestRelayBlocks\030\n " +
      "\001(\0132+.proto_java.RequestRelayBlock" +
      "sMessageH\000\022K\n\023requestTransactions\030\014 \001(\0132" +
      ",.proto_java.RequestTransactionsMe" +
      "ssageH\000\0222\n\010ibdBlock\030\r \001(\0132\036.org.example." +
      "grpc.BlockMessageH\000\022?\n\rinvRelayBlock\030\016 \001" +
      "(\0132&.proto_java.InvRelayBlockMessa" +
      "geH\000\022C\n\017invTransactions\030\017 \001(\0132(.org.exam" +
      "ple.grpc.InvTransactionsMessageH\000\022-\n\004pin" +
      "g\030\020 \001(\0132\035.proto_java.PingMessageH\000" +
      "\022-\n\004pong\030\021 \001(\0132\035.proto_java.PongMe" +
      "ssageH\000\0221\n\006verack\030\023 \001(\0132\037.org.example.gr" +
      "pc.VerackMessageH\000\0223\n\007version\030\024 \001(\0132 .or" +
      "g.example.grpc.VersionMessageH\000\022K\n\023trans" +
      "actionNotFound\030\025 \001(\0132,.proto_java." +
      "TransactionNotFoundMessageH\000\0221\n\006reject\030\026" +
      " \001(\0132\037.proto_java.RejectMessageH\000\022" +
      "U\n\030pruningPointUtxoSetChunk\030\031 \001(\01321.org." +
      "example.grpc.PruningPointUtxoSetChunkMes" +
      "sageH\000\022E\n\020requestIBDBlocks\030\032 \001(\0132).org.e" +
      "xample.grpc.RequestIBDBlocksMessageH\000\022Q\n" +
      "\026unexpectedPruningPoint\030\033 \001(\0132/.org.exam" +
      "ple.grpc.UnexpectedPruningPointMessageH\000" +
      "\022C\n\017ibdBlockLocator\030\036 \001(\0132(.org.example." +
      "grpc.IbdBlockLocatorMessageH\000\022Y\n\032ibdBloc" +
      "kLocatorHighestHash\030\037 \001(\01323.org.example." +
      "grpc.IbdBlockLocatorHighestHashMessageH\000" +
      "\022k\n#requestNextPruningPointUtxoSetChunk\030" +
      "! \001(\0132<.proto_java.RequestNextPrun" +
      "ingPointUtxoSetChunkMessageH\000\022_\n\035donePru" +
      "ningPointUtxoSetChunks\030\" \001(\01326.org.examp" +
      "le.grpc.DonePruningPointUtxoSetChunksMes" +
      "sageH\000\022i\n\"ibdBlockLocatorHighestHashNotF" +
      "ound\030# \001(\0132;.proto_java.IbdBlockLo" +
      "catorHighestHashNotFoundMessageH\000\022M\n\024blo" +
      "ckWithTrustedData\030$ \001(\0132-.org.example.gr" +
      "pc.BlockWithTrustedDataMessageH\000\022W\n\031done" +
      "BlocksWithTrustedData\030% \001(\01322.org.exampl" +
      "e.grpc.DoneBlocksWithTrustedDataMessageH" +
      "\000\022g\n!requestPruningPointAndItsAnticone\030(" +
      " \001(\0132:.proto_java.RequestPruningPo" +
      "intAndItsAnticoneMessageH\000\022=\n\014blockHeade" +
      "rs\030) \001(\0132%.proto_java.BlockHeaders" +
      "MessageH\000\022I\n\022requestNextHeaders\030* \001(\0132+." +
      "proto_java.RequestNextHeadersMessa" +
      "geH\000\022;\n\013DoneHeaders\030+ \001(\0132$.org.example." +
      "grpc.DoneHeadersMessageH\000\022Y\n\032requestPrun" +
      "ingPointUTXOSet\030, \001(\01323.proto_java" +
      ".RequestPruningPointUTXOSetMessageH\000\022A\n\016" +
      "requestHeaders\030- \001(\0132\'.proto_java." +
      "RequestHeadersMessageH\000\022K\n\023requestBlockL" +
      "ocator\030. \001(\0132,.proto_java.RequestB" +
      "lockLocatorMessageH\000\022?\n\rpruningPoints\030/ " +
      "\001(\0132&.proto_java.PruningPointsMess" +
      "ageH\000\022U\n\030requestPruningPointProof\0300 \001(\0132" +
      "1.proto_java.RequestPruningPointPr" +
      "oofMessageH\000\022G\n\021pruningPointProof\0301 \001(\0132" +
      "*.proto_java.PruningPointProofMess" +
      "ageH\000\022/\n\005ready\0302 \001(\0132\036.proto_java." +
      "ReadyMessageH\000\022Q\n\026blockWithTrustedDataV4" +
      "\0303 \001(\0132/.proto_java.BlockWithTrust" +
      "edDataV4MessageH\000\022;\n\013trustedData\0304 \001(\0132$" +
      ".proto_java.TrustedDataMessageH\000\022[" +
      "\n\033requestIBDChainBlockLocator\0305 \001(\01324.or" +
      "g.example.grpc.RequestIBDChainBlockLocat" +
      "orMessageH\000\022M\n\024ibdChainBlockLocator\0306 \001(" +
      "\0132-.proto_java.IbdChainBlockLocato" +
      "rMessageH\000\022C\n\017requestAnticone\0307 \001(\0132(.or" +
      "g.example.grpc.RequestAnticoneMessageH\000\022" +
      "{\n+requestNextPruningPointAndItsAnticone" +
      "Blocks\0308 \001(\0132D.proto_java.RequestN" +
      "extPruningPointAndItsAnticoneBlocksMessa" +
      "geH\000\022V\n\030getCurrentNetworkRequest\030\351\007 \001(\0132" +
      "1.proto_java.GetCurrentNetworkRequ" +
      "estMessageH\000\022X\n\031getCurrentNetworkRespons" +
      "e\030\352\007 \001(\01322.proto_java.GetCurrentNe" +
      "tworkResponseMessageH\000\022J\n\022submitBlockReq" +
      "uest\030\353\007 \001(\0132+.proto_java.SubmitBlo" +
      "ckRequestMessageH\000\022L\n\023submitBlockRespons" +
      "e\030\354\007 \001(\0132,.proto_java.SubmitBlockR" +
      "esponseMessageH\000\022T\n\027getBlockTemplateRequ" +
      "est\030\355\007 \001(\01320.proto_java.GetBlockTe" +
      "mplateRequestMessageH\000\022V\n\030getBlockTempla" +
      "teResponse\030\356\007 \001(\01321.proto_java.Get" +
      "BlockTemplateResponseMessageH\000\022T\n\027notify" +
      "BlockAddedRequest\030\357\007 \001(\01320.org.example.g" +
      "rpc.NotifyBlockAddedRequestMessageH\000\022V\n\030" +
      "notifyBlockAddedResponse\030\360\007 \001(\01321.org.ex" +
      "ample.grpc.NotifyBlockAddedResponseMessa" +
      "geH\000\022R\n\026blockAddedNotification\030\361\007 \001(\0132/." +
      "proto_java.BlockAddedNotificationM" +
      "essageH\000\022T\n\027getPeerAddressesRequest\030\362\007 \001" +
      "(\01320.proto_java.GetPeerAddressesRe" +
      "questMessageH\000\022V\n\030getPeerAddressesRespon" +
      "se\030\363\007 \001(\01321.proto_java.GetPeerAddr" +
      "essesResponseMessageH\000\022X\n\031getSelectedTip" +
      "HashRequest\030\364\007 \001(\01322.proto_java.Ge" +
      "tSelectedTipHashRequestMessageH\000\022Z\n\032getS" +
      "electedTipHashResponse\030\365\007 \001(\01323.org.exam" +
      "ple.grpc.GetSelectedTipHashResponseMessa" +
      "geH\000\022R\n\026getMempoolEntryRequest\030\366\007 \001(\0132/." +
      "proto_java.GetMempoolEntryRequestM" +
      "essageH\000\022T\n\027getMempoolEntryResponse\030\367\007 \001" +
      "(\01320.proto_java.GetMempoolEntryRes" +
      "ponseMessageH\000\022\\\n\033getConnectedPeerInfoRe" +
      "quest\030\370\007 \001(\01324.proto_java.GetConne" +
      "ctedPeerInfoRequestMessageH\000\022^\n\034getConne" +
      "ctedPeerInfoResponse\030\371\007 \001(\01325.org.exampl" +
      "e.grpc.GetConnectedPeerInfoResponseMessa" +
      "geH\000\022B\n\016addPeerRequest\030\372\007 \001(\0132\'.org.exam" +
      "ple.grpc.AddPeerRequestMessageH\000\022D\n\017addP" +
      "eerResponse\030\373\007 \001(\0132(.proto_java.Ad" +
      "dPeerResponseMessageH\000\022V\n\030submitTransact" +
      "ionRequest\030\374\007 \001(\01321.proto_java.Sub" +
      "mitTransactionRequestMessageH\000\022X\n\031submit" +
      "TransactionResponse\030\375\007 \001(\01322.org.example" +
      ".grpc.SubmitTransactionResponseMessageH\000" +
      "\022\202\001\n.notifyVirtualSelectedParentChainCha" +
      "ngedRequest\030\376\007 \001(\0132G.proto_java.No" +
      "tifyVirtualSelectedParentChainChangedReq" +
      "uestMessageH\000\022\204\001\n/notifyVirtualSelectedP" +
      "arentChainChangedResponse\030\377\007 \001(\0132H.org.e" +
      "xample.grpc.NotifyVirtualSelectedParentC" +
      "hainChangedResponseMessageH\000\022\200\001\n-virtual" +
      "SelectedParentChainChangedNotification\030\200" +
      "\010 \001(\0132F.proto_java.VirtualSelected" +
      "ParentChainChangedNotificationMessageH\000\022" +
      "D\n\017getBlockRequest\030\201\010 \001(\0132(.org.example." +
      "grpc.GetBlockRequestMessageH\000\022F\n\020getBloc" +
      "kResponse\030\202\010 \001(\0132).proto_java.GetB" +
      "lockResponseMessageH\000\022N\n\024getSubnetworkRe" +
      "quest\030\203\010 \001(\0132-.proto_java.GetSubne" +
      "tworkRequestMessageH\000\022P\n\025getSubnetworkRe" +
      "sponse\030\204\010 \001(\0132..proto_java.GetSubn" +
      "etworkResponseMessageH\000\022\200\001\n-getVirtualSe" +
      "lectedParentChainFromBlockRequest\030\205\010 \001(\013" +
      "2F.proto_java.GetVirtualSelectedPa" +
      "rentChainFromBlockRequestMessageH\000\022\202\001\n.g" +
      "etVirtualSelectedParentChainFromBlockRes" +
      "ponse\030\206\010 \001(\0132G.proto_java.GetVirtu" +
      "alSelectedParentChainFromBlockResponseMe" +
      "ssageH\000\022F\n\020getBlocksRequest\030\207\010 \001(\0132).org" +
      ".example.grpc.GetBlocksRequestMessageH\000\022" +
      "H\n\021getBlocksResponse\030\210\010 \001(\0132*.org.exampl" +
      "e.grpc.GetBlocksResponseMessageH\000\022N\n\024get" +
      "BlockCountRequest\030\211\010 \001(\0132-.org.example.g" +
      "rpc.GetBlockCountRequestMessageH\000\022P\n\025get" +
      "BlockCountResponse\030\212\010 \001(\0132..org.example." +
      "grpc.GetBlockCountResponseMessageH\000\022R\n\026g" +
      "etBlockDagInfoRequest\030\213\010 \001(\0132/.org.examp" +
      "le.grpc.GetBlockDagInfoRequestMessageH\000\022" +
      "T\n\027getBlockDagInfoResponse\030\214\010 \001(\01320.org." +
      "example.grpc.GetBlockDagInfoResponseMess" +
      "ageH\000\022b\n\036resolveFinalityConflictRequest\030" +
      "\215\010 \001(\01327.proto_java.ResolveFinalit" +
      "yConflictRequestMessageH\000\022d\n\037resolveFina" +
      "lityConflictResponse\030\216\010 \001(\01328.org.exampl" +
      "e.grpc.ResolveFinalityConflictResponseMe" +
      "ssageH\000\022b\n\036notifyFinalityConflictsReques" +
      "t\030\217\010 \001(\01327.proto_java.NotifyFinali" +
      "tyConflictsRequestMessageH\000\022d\n\037notifyFin" +
      "alityConflictsResponse\030\220\010 \001(\01328.org.exam" +
      "ple.grpc.NotifyFinalityConflictsResponse" +
      "MessageH\000\022^\n\034finalityConflictNotificatio" +
      "n\030\221\010 \001(\01325.proto_java.FinalityConf" +
      "lictNotificationMessageH\000\022n\n$finalityCon" +
      "flictResolvedNotification\030\222\010 \001(\0132=.org.e" +
      "xample.grpc.FinalityConflictResolvedNoti" +
      "ficationMessageH\000\022V\n\030getMempoolEntriesRe" +
      "quest\030\223\010 \001(\01321.proto_java.GetMempo" +
      "olEntriesRequestMessageH\000\022X\n\031getMempoolE" +
      "ntriesResponse\030\224\010 \001(\01322.proto_java" +
      ".GetMempoolEntriesResponseMessageH\000\022D\n\017s" +
      "hutDownRequest\030\225\010 \001(\0132(.proto_java" +
      ".ShutDownRequestMessageH\000\022F\n\020shutDownRes" +
      "ponse\030\226\010 \001(\0132).proto_java.ShutDown" +
      "ResponseMessageH\000\022H\n\021getHeadersRequest\030\227" +
      "\010 \001(\0132*.proto_java.GetHeadersReque" +
      "stMessageH\000\022J\n\022getHeadersResponse\030\230\010 \001(\013" +
      "2+.proto_java.GetHeadersResponseMe" +
      "ssageH\000\022X\n\031notifyUtxosChangedRequest\030\231\010 " +
      "\001(\01322.proto_java.NotifyUtxosChange" +
      "dRequestMessageH\000\022Z\n\032notifyUtxosChangedR" +
      "esponse\030\232\010 \001(\01323.proto_java.Notify" +
      "UtxosChangedResponseMessageH\000\022V\n\030utxosCh" +
      "angedNotification\030\233\010 \001(\01321.org.example.g" +
      "rpc.UtxosChangedNotificationMessageH\000\022Z\n" +
      "\032getUtxosByAddressesRequest\030\234\010 \001(\01323.org" +
      ".example.grpc.GetUtxosByAddressesRequest" +
      "MessageH\000\022\\\n\033getUtxosByAddressesResponse" +
      "\030\235\010 \001(\01324.proto_java.GetUtxosByAdd" +
      "ressesResponseMessageH\000\022v\n(getVirtualSel" +
      "ectedParentBlueScoreRequest\030\236\010 \001(\0132A.org" +
      ".example.grpc.GetVirtualSelectedParentBl" +
      "ueScoreRequestMessageH\000\022x\n)getVirtualSel" +
      "ectedParentBlueScoreResponse\030\237\010 \001(\0132B.or" +
      "g.example.grpc.GetVirtualSelectedParentB" +
      "lueScoreResponseMessageH\000\022\212\001\n2notifyVirt" +
      "ualSelectedParentBlueScoreChangedRequest" +
      "\030\240\010 \001(\0132K.proto_java.NotifyVirtual" +
      "SelectedParentBlueScoreChangedRequestMes" +
      "sageH\000\022\214\001\n3notifyVirtualSelectedParentBl" +
      "ueScoreChangedResponse\030\241\010 \001(\0132L.org.exam" +
      "ple.grpc.NotifyVirtualSelectedParentBlue" +
      "ScoreChangedResponseMessageH\000\022\210\001\n1virtua" +
      "lSelectedParentBlueScoreChangedNotificat" +
      "ion\030\242\010 \001(\0132J.proto_java.VirtualSel" +
      "ectedParentBlueScoreChangedNotificationM" +
      "essageH\000\022:\n\nbanRequest\030\243\010 \001(\0132#.org.exam" +
      "ple.grpc.BanRequestMessageH\000\022<\n\013banRespo" +
      "nse\030\244\010 \001(\0132$.proto_java.BanRespons" +
      "eMessageH\000\022>\n\014unbanRequest\030\245\010 \001(\0132%.org." +
      "example.grpc.UnbanRequestMessageH\000\022@\n\run" +
      "banResponse\030\246\010 \001(\0132&.proto_java.Un" +
      "banResponseMessageH\000\022B\n\016getInfoRequest\030\247" +
      "\010 \001(\0132\'.proto_java.GetInfoRequestM" +
      "essageH\000\022D\n\017getInfoResponse\030\250\010 \001(\0132(.org" +
      ".example.grpc.GetInfoResponseMessageH\000\022f" +
      "\n stopNotifyingUtxosChangedRequest\030\251\010 \001(" +
      "\01329.proto_java.StopNotifyingUtxosC" +
      "hangedRequestMessageH\000\022h\n!stopNotifyingU" +
      "txosChangedResponse\030\252\010 \001(\0132:.org.example" +
      ".grpc.StopNotifyingUtxosChangedResponseM" +
      "essageH\000\022v\n(notifyPruningPointUTXOSetOve" +
      "rrideRequest\030\253\010 \001(\0132A.proto_java.N" +
      "otifyPruningPointUTXOSetOverrideRequestM" +
      "essageH\000\022x\n)notifyPruningPointUTXOSetOve" +
      "rrideResponse\030\254\010 \001(\0132B.proto_java." +
      "NotifyPruningPointUTXOSetOverrideRespons" +
      "eMessageH\000\022t\n\'pruningPointUTXOSetOverrid" +
      "eNotification\030\255\010 \001(\0132@.proto_java." +
      "PruningPointUTXOSetOverrideNotificationM" +
      "essageH\000\022\204\001\n/stopNotifyingPruningPointUT" +
      "XOSetOverrideRequest\030\256\010 \001(\0132H.org.exampl" +
      "e.grpc.StopNotifyingPruningPointUTXOSetO" +
      "verrideRequestMessageH\000\022\206\001\n0stopNotifyin" +
      "gPruningPointUTXOSetOverrideResponse\030\257\010 " +
      "\001(\0132I.proto_java.StopNotifyingPrun" +
      "ingPointUTXOSetOverrideResponseMessageH\000" +
      "\022p\n%estimateNetworkHashesPerSecondReques" +
      "t\030\260\010 \001(\0132>.proto_java.EstimateNetw" +
      "orkHashesPerSecondRequestMessageH\000\022r\n&es" +
      "timateNetworkHashesPerSecondResponse\030\261\010 " +
      "\001(\0132?.proto_java.EstimateNetworkHa" +
      "shesPerSecondResponseMessageH\000\022l\n#notify" +
      "VirtualDaaScoreChangedRequest\030\262\010 \001(\0132<.o" +
      "rg.example.grpc.NotifyVirtualDaaScoreCha" +
      "ngedRequestMessageH\000\022n\n$notifyVirtualDaa" +
      "ScoreChangedResponse\030\263\010 \001(\0132=.org.exampl" +
      "e.grpc.NotifyVirtualDaaScoreChangedRespo" +
      "nseMessageH\000\022j\n\"virtualDaaScoreChangedNo" +
      "tification\030\264\010 \001(\0132;.proto_java.Vir" +
      "tualDaaScoreChangedNotificationMessageH\000" +
      "\022Z\n\032getBalanceByAddressRequest\030\265\010 \001(\01323." +
      "proto_java.GetBalanceByAddressRequ" +
      "estMessageH\000\022\\\n\033getBalanceByAddressRespo" +
      "nse\030\266\010 \001(\01324.proto_java.GetBalance" +
      "ByAddressResponseMessageH\000\022`\n\035getBalance" +
      "sByAddressesRequest\030\267\010 \001(\01326.org.example" +
      ".grpc.GetBalancesByAddressesRequestMessa" +
      "geH\000\022b\n\036getBalancesByAddressesResponse\030\270" +
      "\010 \001(\01327.proto_java.GetBalancesByAd" +
      "dressesResponseMessageH\000\022`\n\035notifyNewBlo" +
      "ckTemplateRequest\030\271\010 \001(\01326.org.example.g" +
      "rpc.NotifyNewBlockTemplateRequestMessage" +
      "H\000\022b\n\036notifyNewBlockTemplateResponse\030\272\010 " +
      "\001(\01327.proto_java.NotifyNewBlockTem" +
      "plateResponseMessageH\000\022^\n\034newBlockTempla" +
      "teNotification\030\273\010 \001(\01325.proto_java" +
      ".NewBlockTemplateNotificationMessageH\000\022l" +
      "\n#getMempoolEntriesByAddressesRequest\030\274\010" +
      " \001(\0132<.proto_java.GetMempoolEntrie" +
      "sByAddressesRequestMessageH\000\022n\n$getMempo" +
      "olEntriesByAddressesResponse\030\275\010 \001(\0132=.or" +
      "g.example.grpc.GetMempoolEntriesByAddres" +
      "sesResponseMessageH\000\022N\n\024getCoinSupplyReq" +
      "uest\030\276\010 \001(\0132-.proto_java.GetCoinSu" +
      "pplyRequestMessageH\000\022P\n\025getCoinSupplyRes" +
      "ponse\030\277\010 \001(\0132..proto_java.GetCoinS" +
      "upplyResponseMessageH\000B\t\n\007payload2^\n\003P2P" +
      "\022W\n\rMessageStream\022\037.proto_java.Kas" +
      "padMessage\032\037.proto_java.KaspadMess" +
      "age\"\000(\0010\0012^\n\003RPC\022W\n\rMessageStream\022\037.org." +
      "example.grpc.KaspadMessage\032\037.org.example" +
      ".grpc.KaspadMessage\"\000(\0010\001B\024\n\020org.example" +
      ".grpcP\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          proto_java.P2P.getDescriptor(),
          proto_java.Rpc.getDescriptor(),
        });
    internal_static_org_example_grpc_KaspadMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_example_grpc_KaspadMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_example_grpc_KaspadMessage_descriptor,
        new java.lang.String[] { "Addresses", "Block", "Transaction", "BlockLocator", "RequestAddresses", "RequestRelayBlocks", "RequestTransactions", "IbdBlock", "InvRelayBlock", "InvTransactions", "Ping", "Pong", "Verack", "Version", "TransactionNotFound", "Reject", "PruningPointUtxoSetChunk", "RequestIBDBlocks", "UnexpectedPruningPoint", "IbdBlockLocator", "IbdBlockLocatorHighestHash", "RequestNextPruningPointUtxoSetChunk", "DonePruningPointUtxoSetChunks", "IbdBlockLocatorHighestHashNotFound", "BlockWithTrustedData", "DoneBlocksWithTrustedData", "RequestPruningPointAndItsAnticone", "BlockHeaders", "RequestNextHeaders", "DoneHeaders", "RequestPruningPointUTXOSet", "RequestHeaders", "RequestBlockLocator", "PruningPoints", "RequestPruningPointProof", "PruningPointProof", "Ready", "BlockWithTrustedDataV4", "TrustedData", "RequestIBDChainBlockLocator", "IbdChainBlockLocator", "RequestAnticone", "RequestNextPruningPointAndItsAnticoneBlocks", "GetCurrentNetworkRequest", "GetCurrentNetworkResponse", "SubmitBlockRequest", "SubmitBlockResponse", "GetBlockTemplateRequest", "GetBlockTemplateResponse", "NotifyBlockAddedRequest", "NotifyBlockAddedResponse", "BlockAddedNotification", "GetPeerAddressesRequest", "GetPeerAddressesResponse", "GetSelectedTipHashRequest", "GetSelectedTipHashResponse", "GetMempoolEntryRequest", "GetMempoolEntryResponse", "GetConnectedPeerInfoRequest", "GetConnectedPeerInfoResponse", "AddPeerRequest", "AddPeerResponse", "SubmitTransactionRequest", "SubmitTransactionResponse", "NotifyVirtualSelectedParentChainChangedRequest", "NotifyVirtualSelectedParentChainChangedResponse", "VirtualSelectedParentChainChangedNotification", "GetBlockRequest", "GetBlockResponse", "GetSubnetworkRequest", "GetSubnetworkResponse", "GetVirtualSelectedParentChainFromBlockRequest", "GetVirtualSelectedParentChainFromBlockResponse", "GetBlocksRequest", "GetBlocksResponse", "GetBlockCountRequest", "GetBlockCountResponse", "GetBlockDagInfoRequest", "GetBlockDagInfoResponse", "ResolveFinalityConflictRequest", "ResolveFinalityConflictResponse", "NotifyFinalityConflictsRequest", "NotifyFinalityConflictsResponse", "FinalityConflictNotification", "FinalityConflictResolvedNotification", "GetMempoolEntriesRequest", "GetMempoolEntriesResponse", "ShutDownRequest", "ShutDownResponse", "GetHeadersRequest", "GetHeadersResponse", "NotifyUtxosChangedRequest", "NotifyUtxosChangedResponse", "UtxosChangedNotification", "GetUtxosByAddressesRequest", "GetUtxosByAddressesResponse", "GetVirtualSelectedParentBlueScoreRequest", "GetVirtualSelectedParentBlueScoreResponse", "NotifyVirtualSelectedParentBlueScoreChangedRequest", "NotifyVirtualSelectedParentBlueScoreChangedResponse", "VirtualSelectedParentBlueScoreChangedNotification", "BanRequest", "BanResponse", "UnbanRequest", "UnbanResponse", "GetInfoRequest", "GetInfoResponse", "StopNotifyingUtxosChangedRequest", "StopNotifyingUtxosChangedResponse", "NotifyPruningPointUTXOSetOverrideRequest", "NotifyPruningPointUTXOSetOverrideResponse", "PruningPointUTXOSetOverrideNotification", "StopNotifyingPruningPointUTXOSetOverrideRequest", "StopNotifyingPruningPointUTXOSetOverrideResponse", "EstimateNetworkHashesPerSecondRequest", "EstimateNetworkHashesPerSecondResponse", "NotifyVirtualDaaScoreChangedRequest", "NotifyVirtualDaaScoreChangedResponse", "VirtualDaaScoreChangedNotification", "GetBalanceByAddressRequest", "GetBalanceByAddressResponse", "GetBalancesByAddressesRequest", "GetBalancesByAddressesResponse", "NotifyNewBlockTemplateRequest", "NotifyNewBlockTemplateResponse", "NewBlockTemplateNotification", "GetMempoolEntriesByAddressesRequest", "GetMempoolEntriesByAddressesResponse", "GetCoinSupplyRequest", "GetCoinSupplyResponse", "Payload", });
    proto_java.P2P.getDescriptor();
    proto_java.Rpc.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
