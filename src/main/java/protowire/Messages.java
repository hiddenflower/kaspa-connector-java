// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

package protowire;

public final class Messages {
  private Messages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protowire_KaspadMessage_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protowire_KaspadMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016messages.proto\022\tprotowire\032\tp2p.proto\032\t" +
      "rpc.proto\"\321R\n\rKaspadMessage\0220\n\taddresses" +
      "\030\001 \001(\0132\033.protowire.AddressesMessageH\000\022(\n" +
      "\005block\030\002 \001(\0132\027.protowire.BlockMessageH\000\022" +
      "4\n\013transaction\030\003 \001(\0132\035.protowire.Transac" +
      "tionMessageH\000\0226\n\014blockLocator\030\005 \001(\0132\036.pr" +
      "otowire.BlockLocatorMessageH\000\022>\n\020request" +
      "Addresses\030\006 \001(\0132\".protowire.RequestAddre" +
      "ssesMessageH\000\022B\n\022requestRelayBlocks\030\n \001(" +
      "\0132$.protowire.RequestRelayBlocksMessageH" +
      "\000\022D\n\023requestTransactions\030\014 \001(\0132%.protowi" +
      "re.RequestTransactionsMessageH\000\022+\n\010ibdBl" +
      "ock\030\r \001(\0132\027.protowire.BlockMessageH\000\0228\n\r" +
      "invRelayBlock\030\016 \001(\0132\037.protowire.InvRelay" +
      "BlockMessageH\000\022<\n\017invTransactions\030\017 \001(\0132" +
      "!.protowire.InvTransactionsMessageH\000\022&\n\004" +
      "ping\030\020 \001(\0132\026.protowire.PingMessageH\000\022&\n\004" +
      "pong\030\021 \001(\0132\026.protowire.PongMessageH\000\022*\n\006" +
      "verack\030\023 \001(\0132\030.protowire.VerackMessageH\000" +
      "\022,\n\007version\030\024 \001(\0132\031.protowire.VersionMes" +
      "sageH\000\022D\n\023transactionNotFound\030\025 \001(\0132%.pr" +
      "otowire.TransactionNotFoundMessageH\000\022*\n\006" +
      "reject\030\026 \001(\0132\030.protowire.RejectMessageH\000" +
      "\022N\n\030pruningPointUtxoSetChunk\030\031 \001(\0132*.pro" +
      "towire.PruningPointUtxoSetChunkMessageH\000" +
      "\022>\n\020requestIBDBlocks\030\032 \001(\0132\".protowire.R" +
      "equestIBDBlocksMessageH\000\022J\n\026unexpectedPr" +
      "uningPoint\030\033 \001(\0132(.protowire.UnexpectedP" +
      "runingPointMessageH\000\022<\n\017ibdBlockLocator\030" +
      "\036 \001(\0132!.protowire.IbdBlockLocatorMessage" +
      "H\000\022R\n\032ibdBlockLocatorHighestHash\030\037 \001(\0132," +
      ".protowire.IbdBlockLocatorHighestHashMes" +
      "sageH\000\022d\n#requestNextPruningPointUtxoSet" +
      "Chunk\030! \001(\01325.protowire.RequestNextPruni" +
      "ngPointUtxoSetChunkMessageH\000\022X\n\035donePrun" +
      "ingPointUtxoSetChunks\030\" \001(\0132/.protowire." +
      "DonePruningPointUtxoSetChunksMessageH\000\022b" +
      "\n\"ibdBlockLocatorHighestHashNotFound\030# \001" +
      "(\01324.protowire.IbdBlockLocatorHighestHas" +
      "hNotFoundMessageH\000\022F\n\024blockWithTrustedDa" +
      "ta\030$ \001(\0132&.protowire.BlockWithTrustedDat" +
      "aMessageH\000\022P\n\031doneBlocksWithTrustedData\030" +
      "% \001(\0132+.protowire.DoneBlocksWithTrustedD" +
      "ataMessageH\000\022`\n!requestPruningPointAndIt" +
      "sAnticone\030( \001(\01323.protowire.RequestPruni" +
      "ngPointAndItsAnticoneMessageH\000\0226\n\014blockH" +
      "eaders\030) \001(\0132\036.protowire.BlockHeadersMes" +
      "sageH\000\022B\n\022requestNextHeaders\030* \001(\0132$.pro" +
      "towire.RequestNextHeadersMessageH\000\0224\n\013Do" +
      "neHeaders\030+ \001(\0132\035.protowire.DoneHeadersM" +
      "essageH\000\022R\n\032requestPruningPointUTXOSet\030," +
      " \001(\0132,.protowire.RequestPruningPointUTXO" +
      "SetMessageH\000\022:\n\016requestHeaders\030- \001(\0132 .p" +
      "rotowire.RequestHeadersMessageH\000\022D\n\023requ" +
      "estBlockLocator\030. \001(\0132%.protowire.Reques" +
      "tBlockLocatorMessageH\000\0228\n\rpruningPoints\030" +
      "/ \001(\0132\037.protowire.PruningPointsMessageH\000" +
      "\022N\n\030requestPruningPointProof\0300 \001(\0132*.pro" +
      "towire.RequestPruningPointProofMessageH\000" +
      "\022@\n\021pruningPointProof\0301 \001(\0132#.protowire." +
      "PruningPointProofMessageH\000\022(\n\005ready\0302 \001(" +
      "\0132\027.protowire.ReadyMessageH\000\022J\n\026blockWit" +
      "hTrustedDataV4\0303 \001(\0132(.protowire.BlockWi" +
      "thTrustedDataV4MessageH\000\0224\n\013trustedData\030" +
      "4 \001(\0132\035.protowire.TrustedDataMessageH\000\022T" +
      "\n\033requestIBDChainBlockLocator\0305 \001(\0132-.pr" +
      "otowire.RequestIBDChainBlockLocatorMessa" +
      "geH\000\022F\n\024ibdChainBlockLocator\0306 \001(\0132&.pro" +
      "towire.IbdChainBlockLocatorMessageH\000\022<\n\017" +
      "requestAnticone\0307 \001(\0132!.protowire.Reques" +
      "tAnticoneMessageH\000\022t\n+requestNextPruning" +
      "PointAndItsAnticoneBlocks\0308 \001(\0132=.protow" +
      "ire.RequestNextPruningPointAndItsAnticon" +
      "eBlocksMessageH\000\022O\n\030getCurrentNetworkReq" +
      "uest\030\351\007 \001(\0132*.protowire.GetCurrentNetwor" +
      "kRequestMessageH\000\022Q\n\031getCurrentNetworkRe" +
      "sponse\030\352\007 \001(\0132+.protowire.GetCurrentNetw" +
      "orkResponseMessageH\000\022C\n\022submitBlockReque" +
      "st\030\353\007 \001(\0132$.protowire.SubmitBlockRequest" +
      "MessageH\000\022E\n\023submitBlockResponse\030\354\007 \001(\0132" +
      "%.protowire.SubmitBlockResponseMessageH\000" +
      "\022M\n\027getBlockTemplateRequest\030\355\007 \001(\0132).pro" +
      "towire.GetBlockTemplateRequestMessageH\000\022" +
      "O\n\030getBlockTemplateResponse\030\356\007 \001(\0132*.pro" +
      "towire.GetBlockTemplateResponseMessageH\000" +
      "\022M\n\027notifyBlockAddedRequest\030\357\007 \001(\0132).pro" +
      "towire.NotifyBlockAddedRequestMessageH\000\022" +
      "O\n\030notifyBlockAddedResponse\030\360\007 \001(\0132*.pro" +
      "towire.NotifyBlockAddedResponseMessageH\000" +
      "\022K\n\026blockAddedNotification\030\361\007 \001(\0132(.prot" +
      "owire.BlockAddedNotificationMessageH\000\022M\n" +
      "\027getPeerAddressesRequest\030\362\007 \001(\0132).protow" +
      "ire.GetPeerAddressesRequestMessageH\000\022O\n\030" +
      "getPeerAddressesResponse\030\363\007 \001(\0132*.protow" +
      "ire.GetPeerAddressesResponseMessageH\000\022Q\n" +
      "\031getSelectedTipHashRequest\030\364\007 \001(\0132+.prot" +
      "owire.GetSelectedTipHashRequestMessageH\000" +
      "\022S\n\032getSelectedTipHashResponse\030\365\007 \001(\0132,." +
      "protowire.GetSelectedTipHashResponseMess" +
      "ageH\000\022K\n\026getMempoolEntryRequest\030\366\007 \001(\0132(" +
      ".protowire.GetMempoolEntryRequestMessage" +
      "H\000\022M\n\027getMempoolEntryResponse\030\367\007 \001(\0132).p" +
      "rotowire.GetMempoolEntryResponseMessageH" +
      "\000\022U\n\033getConnectedPeerInfoRequest\030\370\007 \001(\0132" +
      "-.protowire.GetConnectedPeerInfoRequestM" +
      "essageH\000\022W\n\034getConnectedPeerInfoResponse" +
      "\030\371\007 \001(\0132..protowire.GetConnectedPeerInfo" +
      "ResponseMessageH\000\022;\n\016addPeerRequest\030\372\007 \001" +
      "(\0132 .protowire.AddPeerRequestMessageH\000\022=" +
      "\n\017addPeerResponse\030\373\007 \001(\0132!.protowire.Add" +
      "PeerResponseMessageH\000\022O\n\030submitTransacti" +
      "onRequest\030\374\007 \001(\0132*.protowire.SubmitTrans" +
      "actionRequestMessageH\000\022Q\n\031submitTransact" +
      "ionResponse\030\375\007 \001(\0132+.protowire.SubmitTra" +
      "nsactionResponseMessageH\000\022{\n.notifyVirtu" +
      "alSelectedParentChainChangedRequest\030\376\007 \001" +
      "(\0132@.protowire.NotifyVirtualSelectedPare" +
      "ntChainChangedRequestMessageH\000\022}\n/notify" +
      "VirtualSelectedParentChainChangedRespons" +
      "e\030\377\007 \001(\0132A.protowire.NotifyVirtualSelect" +
      "edParentChainChangedResponseMessageH\000\022y\n" +
      "-virtualSelectedParentChainChangedNotifi" +
      "cation\030\200\010 \001(\0132?.protowire.VirtualSelecte" +
      "dParentChainChangedNotificationMessageH\000" +
      "\022=\n\017getBlockRequest\030\201\010 \001(\0132!.protowire.G" +
      "etBlockRequestMessageH\000\022?\n\020getBlockRespo" +
      "nse\030\202\010 \001(\0132\".protowire.GetBlockResponseM" +
      "essageH\000\022G\n\024getSubnetworkRequest\030\203\010 \001(\0132" +
      "&.protowire.GetSubnetworkRequestMessageH" +
      "\000\022I\n\025getSubnetworkResponse\030\204\010 \001(\0132\'.prot" +
      "owire.GetSubnetworkResponseMessageH\000\022y\n-" +
      "getVirtualSelectedParentChainFromBlockRe" +
      "quest\030\205\010 \001(\0132?.protowire.GetVirtualSelec" +
      "tedParentChainFromBlockRequestMessageH\000\022" +
      "{\n.getVirtualSelectedParentChainFromBloc" +
      "kResponse\030\206\010 \001(\0132@.protowire.GetVirtualS" +
      "electedParentChainFromBlockResponseMessa" +
      "geH\000\022?\n\020getBlocksRequest\030\207\010 \001(\0132\".protow" +
      "ire.GetBlocksRequestMessageH\000\022A\n\021getBloc" +
      "ksResponse\030\210\010 \001(\0132#.protowire.GetBlocksR" +
      "esponseMessageH\000\022G\n\024getBlockCountRequest" +
      "\030\211\010 \001(\0132&.protowire.GetBlockCountRequest" +
      "MessageH\000\022I\n\025getBlockCountResponse\030\212\010 \001(" +
      "\0132\'.protowire.GetBlockCountResponseMessa" +
      "geH\000\022K\n\026getBlockDagInfoRequest\030\213\010 \001(\0132(." +
      "protowire.GetBlockDagInfoRequestMessageH" +
      "\000\022M\n\027getBlockDagInfoResponse\030\214\010 \001(\0132).pr" +
      "otowire.GetBlockDagInfoResponseMessageH\000" +
      "\022[\n\036resolveFinalityConflictRequest\030\215\010 \001(" +
      "\01320.protowire.ResolveFinalityConflictReq" +
      "uestMessageH\000\022]\n\037resolveFinalityConflict" +
      "Response\030\216\010 \001(\01321.protowire.ResolveFinal" +
      "ityConflictResponseMessageH\000\022[\n\036notifyFi" +
      "nalityConflictsRequest\030\217\010 \001(\01320.protowir" +
      "e.NotifyFinalityConflictsRequestMessageH" +
      "\000\022]\n\037notifyFinalityConflictsResponse\030\220\010 " +
      "\001(\01321.protowire.NotifyFinalityConflictsR" +
      "esponseMessageH\000\022W\n\034finalityConflictNoti" +
      "fication\030\221\010 \001(\0132..protowire.FinalityConf" +
      "lictNotificationMessageH\000\022g\n$finalityCon" +
      "flictResolvedNotification\030\222\010 \001(\01326.proto" +
      "wire.FinalityConflictResolvedNotificatio" +
      "nMessageH\000\022O\n\030getMempoolEntriesRequest\030\223" +
      "\010 \001(\0132*.protowire.GetMempoolEntriesReque" +
      "stMessageH\000\022Q\n\031getMempoolEntriesResponse" +
      "\030\224\010 \001(\0132+.protowire.GetMempoolEntriesRes" +
      "ponseMessageH\000\022=\n\017shutDownRequest\030\225\010 \001(\013" +
      "2!.protowire.ShutDownRequestMessageH\000\022?\n" +
      "\020shutDownResponse\030\226\010 \001(\0132\".protowire.Shu" +
      "tDownResponseMessageH\000\022A\n\021getHeadersRequ" +
      "est\030\227\010 \001(\0132#.protowire.GetHeadersRequest" +
      "MessageH\000\022C\n\022getHeadersResponse\030\230\010 \001(\0132$" +
      ".protowire.GetHeadersResponseMessageH\000\022Q" +
      "\n\031notifyUtxosChangedRequest\030\231\010 \001(\0132+.pro" +
      "towire.NotifyUtxosChangedRequestMessageH" +
      "\000\022S\n\032notifyUtxosChangedResponse\030\232\010 \001(\0132," +
      ".protowire.NotifyUtxosChangedResponseMes" +
      "sageH\000\022O\n\030utxosChangedNotification\030\233\010 \001(" +
      "\0132*.protowire.UtxosChangedNotificationMe" +
      "ssageH\000\022S\n\032getUtxosByAddressesRequest\030\234\010" +
      " \001(\0132,.protowire.GetUtxosByAddressesRequ" +
      "estMessageH\000\022U\n\033getUtxosByAddressesRespo" +
      "nse\030\235\010 \001(\0132-.protowire.GetUtxosByAddress" +
      "esResponseMessageH\000\022o\n(getVirtualSelecte" +
      "dParentBlueScoreRequest\030\236\010 \001(\0132:.protowi" +
      "re.GetVirtualSelectedParentBlueScoreRequ" +
      "estMessageH\000\022q\n)getVirtualSelectedParent" +
      "BlueScoreResponse\030\237\010 \001(\0132;.protowire.Get" +
      "VirtualSelectedParentBlueScoreResponseMe" +
      "ssageH\000\022\203\001\n2notifyVirtualSelectedParentB" +
      "lueScoreChangedRequest\030\240\010 \001(\0132D.protowir" +
      "e.NotifyVirtualSelectedParentBlueScoreCh" +
      "angedRequestMessageH\000\022\205\001\n3notifyVirtualS" +
      "electedParentBlueScoreChangedResponse\030\241\010" +
      " \001(\0132E.protowire.NotifyVirtualSelectedPa" +
      "rentBlueScoreChangedResponseMessageH\000\022\201\001" +
      "\n1virtualSelectedParentBlueScoreChangedN" +
      "otification\030\242\010 \001(\0132C.protowire.VirtualSe" +
      "lectedParentBlueScoreChangedNotification" +
      "MessageH\000\0223\n\nbanRequest\030\243\010 \001(\0132\034.protowi" +
      "re.BanRequestMessageH\000\0225\n\013banResponse\030\244\010" +
      " \001(\0132\035.protowire.BanResponseMessageH\000\0227\n" +
      "\014unbanRequest\030\245\010 \001(\0132\036.protowire.UnbanRe" +
      "questMessageH\000\0229\n\runbanResponse\030\246\010 \001(\0132\037" +
      ".protowire.UnbanResponseMessageH\000\022;\n\016get" +
      "InfoRequest\030\247\010 \001(\0132 .protowire.GetInfoRe" +
      "questMessageH\000\022=\n\017getInfoResponse\030\250\010 \001(\013" +
      "2!.protowire.GetInfoResponseMessageH\000\022_\n" +
      " stopNotifyingUtxosChangedRequest\030\251\010 \001(\013" +
      "22.protowire.StopNotifyingUtxosChangedRe" +
      "questMessageH\000\022a\n!stopNotifyingUtxosChan" +
      "gedResponse\030\252\010 \001(\01323.protowire.StopNotif" +
      "yingUtxosChangedResponseMessageH\000\022o\n(not" +
      "ifyPruningPointUTXOSetOverrideRequest\030\253\010" +
      " \001(\0132:.protowire.NotifyPruningPointUTXOS" +
      "etOverrideRequestMessageH\000\022q\n)notifyPrun" +
      "ingPointUTXOSetOverrideResponse\030\254\010 \001(\0132;" +
      ".protowire.NotifyPruningPointUTXOSetOver" +
      "rideResponseMessageH\000\022m\n\'pruningPointUTX" +
      "OSetOverrideNotification\030\255\010 \001(\01329.protow" +
      "ire.PruningPointUTXOSetOverrideNotificat" +
      "ionMessageH\000\022}\n/stopNotifyingPruningPoin" +
      "tUTXOSetOverrideRequest\030\256\010 \001(\0132A.protowi" +
      "re.StopNotifyingPruningPointUTXOSetOverr" +
      "ideRequestMessageH\000\022\177\n0stopNotifyingPrun" +
      "ingPointUTXOSetOverrideResponse\030\257\010 \001(\0132B" +
      ".protowire.StopNotifyingPruningPointUTXO" +
      "SetOverrideResponseMessageH\000\022i\n%estimate" +
      "NetworkHashesPerSecondRequest\030\260\010 \001(\01327.p" +
      "rotowire.EstimateNetworkHashesPerSecondR" +
      "equestMessageH\000\022k\n&estimateNetworkHashes" +
      "PerSecondResponse\030\261\010 \001(\01328.protowire.Est" +
      "imateNetworkHashesPerSecondResponseMessa" +
      "geH\000\022e\n#notifyVirtualDaaScoreChangedRequ" +
      "est\030\262\010 \001(\01325.protowire.NotifyVirtualDaaS" +
      "coreChangedRequestMessageH\000\022g\n$notifyVir" +
      "tualDaaScoreChangedResponse\030\263\010 \001(\01326.pro" +
      "towire.NotifyVirtualDaaScoreChangedRespo" +
      "nseMessageH\000\022c\n\"virtualDaaScoreChangedNo" +
      "tification\030\264\010 \001(\01324.protowire.VirtualDaa" +
      "ScoreChangedNotificationMessageH\000\022S\n\032get" +
      "BalanceByAddressRequest\030\265\010 \001(\0132,.protowi" +
      "re.GetBalanceByAddressRequestMessageH\000\022U" +
      "\n\033getBalanceByAddressResponse\030\266\010 \001(\0132-.p" +
      "rotowire.GetBalanceByAddressResponseMess" +
      "ageH\000\022Y\n\035getBalancesByAddressesRequest\030\267" +
      "\010 \001(\0132/.protowire.GetBalancesByAddresses" +
      "RequestMessageH\000\022[\n\036getBalancesByAddress" +
      "esResponse\030\270\010 \001(\01320.protowire.GetBalance" +
      "sByAddressesResponseMessageH\000\022Y\n\035notifyN" +
      "ewBlockTemplateRequest\030\271\010 \001(\0132/.protowir" +
      "e.NotifyNewBlockTemplateRequestMessageH\000" +
      "\022[\n\036notifyNewBlockTemplateResponse\030\272\010 \001(" +
      "\01320.protowire.NotifyNewBlockTemplateResp" +
      "onseMessageH\000\022W\n\034newBlockTemplateNotific" +
      "ation\030\273\010 \001(\0132..protowire.NewBlockTemplat" +
      "eNotificationMessageH\000\022e\n#getMempoolEntr" +
      "iesByAddressesRequest\030\274\010 \001(\01325.protowire" +
      ".GetMempoolEntriesByAddressesRequestMess" +
      "ageH\000\022g\n$getMempoolEntriesByAddressesRes" +
      "ponse\030\275\010 \001(\01326.protowire.GetMempoolEntri" +
      "esByAddressesResponseMessageH\000\022G\n\024getCoi" +
      "nSupplyRequest\030\276\010 \001(\0132&.protowire.GetCoi" +
      "nSupplyRequestMessageH\000\022I\n\025getCoinSupply" +
      "Response\030\277\010 \001(\0132\'.protowire.GetCoinSuppl" +
      "yResponseMessageH\000B\t\n\007payload2P\n\003P2P\022I\n\r" +
      "MessageStream\022\030.protowire.KaspadMessage\032" +
      "\030.protowire.KaspadMessage\"\000(\0010\0012P\n\003RPC\022I" +
      "\n\rMessageStream\022\030.protowire.KaspadMessag" +
      "e\032\030.protowire.KaspadMessage\"\000(\0010\001B(\n$git" +
      "hub.com/kaspanet/kaspad/protowireP\001b\006pro" +
      "to3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protowire.P2P.getDescriptor(),
          protowire.Rpc.getDescriptor(),
        });
    internal_static_protowire_KaspadMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protowire_KaspadMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protowire_KaspadMessage_descriptor,
        new java.lang.String[] { "Addresses", "Block", "Transaction", "BlockLocator", "RequestAddresses", "RequestRelayBlocks", "RequestTransactions", "IbdBlock", "InvRelayBlock", "InvTransactions", "Ping", "Pong", "Verack", "Version", "TransactionNotFound", "Reject", "PruningPointUtxoSetChunk", "RequestIBDBlocks", "UnexpectedPruningPoint", "IbdBlockLocator", "IbdBlockLocatorHighestHash", "RequestNextPruningPointUtxoSetChunk", "DonePruningPointUtxoSetChunks", "IbdBlockLocatorHighestHashNotFound", "BlockWithTrustedData", "DoneBlocksWithTrustedData", "RequestPruningPointAndItsAnticone", "BlockHeaders", "RequestNextHeaders", "DoneHeaders", "RequestPruningPointUTXOSet", "RequestHeaders", "RequestBlockLocator", "PruningPoints", "RequestPruningPointProof", "PruningPointProof", "Ready", "BlockWithTrustedDataV4", "TrustedData", "RequestIBDChainBlockLocator", "IbdChainBlockLocator", "RequestAnticone", "RequestNextPruningPointAndItsAnticoneBlocks", "GetCurrentNetworkRequest", "GetCurrentNetworkResponse", "SubmitBlockRequest", "SubmitBlockResponse", "GetBlockTemplateRequest", "GetBlockTemplateResponse", "NotifyBlockAddedRequest", "NotifyBlockAddedResponse", "BlockAddedNotification", "GetPeerAddressesRequest", "GetPeerAddressesResponse", "GetSelectedTipHashRequest", "GetSelectedTipHashResponse", "GetMempoolEntryRequest", "GetMempoolEntryResponse", "GetConnectedPeerInfoRequest", "GetConnectedPeerInfoResponse", "AddPeerRequest", "AddPeerResponse", "SubmitTransactionRequest", "SubmitTransactionResponse", "NotifyVirtualSelectedParentChainChangedRequest", "NotifyVirtualSelectedParentChainChangedResponse", "VirtualSelectedParentChainChangedNotification", "GetBlockRequest", "GetBlockResponse", "GetSubnetworkRequest", "GetSubnetworkResponse", "GetVirtualSelectedParentChainFromBlockRequest", "GetVirtualSelectedParentChainFromBlockResponse", "GetBlocksRequest", "GetBlocksResponse", "GetBlockCountRequest", "GetBlockCountResponse", "GetBlockDagInfoRequest", "GetBlockDagInfoResponse", "ResolveFinalityConflictRequest", "ResolveFinalityConflictResponse", "NotifyFinalityConflictsRequest", "NotifyFinalityConflictsResponse", "FinalityConflictNotification", "FinalityConflictResolvedNotification", "GetMempoolEntriesRequest", "GetMempoolEntriesResponse", "ShutDownRequest", "ShutDownResponse", "GetHeadersRequest", "GetHeadersResponse", "NotifyUtxosChangedRequest", "NotifyUtxosChangedResponse", "UtxosChangedNotification", "GetUtxosByAddressesRequest", "GetUtxosByAddressesResponse", "GetVirtualSelectedParentBlueScoreRequest", "GetVirtualSelectedParentBlueScoreResponse", "NotifyVirtualSelectedParentBlueScoreChangedRequest", "NotifyVirtualSelectedParentBlueScoreChangedResponse", "VirtualSelectedParentBlueScoreChangedNotification", "BanRequest", "BanResponse", "UnbanRequest", "UnbanResponse", "GetInfoRequest", "GetInfoResponse", "StopNotifyingUtxosChangedRequest", "StopNotifyingUtxosChangedResponse", "NotifyPruningPointUTXOSetOverrideRequest", "NotifyPruningPointUTXOSetOverrideResponse", "PruningPointUTXOSetOverrideNotification", "StopNotifyingPruningPointUTXOSetOverrideRequest", "StopNotifyingPruningPointUTXOSetOverrideResponse", "EstimateNetworkHashesPerSecondRequest", "EstimateNetworkHashesPerSecondResponse", "NotifyVirtualDaaScoreChangedRequest", "NotifyVirtualDaaScoreChangedResponse", "VirtualDaaScoreChangedNotification", "GetBalanceByAddressRequest", "GetBalanceByAddressResponse", "GetBalancesByAddressesRequest", "GetBalancesByAddressesResponse", "NotifyNewBlockTemplateRequest", "NotifyNewBlockTemplateResponse", "NewBlockTemplateNotification", "GetMempoolEntriesByAddressesRequest", "GetMempoolEntriesByAddressesResponse", "GetCoinSupplyRequest", "GetCoinSupplyResponse", "Payload", });
    protowire.P2P.getDescriptor();
    protowire.Rpc.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
