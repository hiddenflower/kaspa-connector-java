// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package protowire;

public interface GetBlocksResponseMessageOrBuilder extends
    // @@protoc_insertion_point(interface_extends:protowire.GetBlocksResponseMessage)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated string blockHashes = 4;</code>
   * @return A list containing the blockHashes.
   */
  java.util.List<java.lang.String>
      getBlockHashesList();
  /**
   * <code>repeated string blockHashes = 4;</code>
   * @return The count of blockHashes.
   */
  int getBlockHashesCount();
  /**
   * <code>repeated string blockHashes = 4;</code>
   * @param index The index of the element to return.
   * @return The blockHashes at the given index.
   */
  java.lang.String getBlockHashes(int index);
  /**
   * <code>repeated string blockHashes = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the blockHashes at the given index.
   */
  com.google.protobuf.ByteString
      getBlockHashesBytes(int index);

  /**
   * <code>repeated .protowire.RpcBlock blocks = 3;</code>
   */
  java.util.List<protowire.RpcBlock> 
      getBlocksList();
  /**
   * <code>repeated .protowire.RpcBlock blocks = 3;</code>
   */
  protowire.RpcBlock getBlocks(int index);
  /**
   * <code>repeated .protowire.RpcBlock blocks = 3;</code>
   */
  int getBlocksCount();
  /**
   * <code>repeated .protowire.RpcBlock blocks = 3;</code>
   */
  java.util.List<? extends protowire.RpcBlockOrBuilder> 
      getBlocksOrBuilderList();
  /**
   * <code>repeated .protowire.RpcBlock blocks = 3;</code>
   */
  protowire.RpcBlockOrBuilder getBlocksOrBuilder(
      int index);

  /**
   * <code>.protowire.RPCError error = 1000;</code>
   * @return Whether the error field is set.
   */
  boolean hasError();
  /**
   * <code>.protowire.RPCError error = 1000;</code>
   * @return The error.
   */
  protowire.RPCError getError();
  /**
   * <code>.protowire.RPCError error = 1000;</code>
   */
  protowire.RPCErrorOrBuilder getErrorOrBuilder();
}
